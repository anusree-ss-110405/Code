Rat in a Maze Problem when movement in all possible directions is allowed

// You are using GCC
#include<iostream>
#include<vector>
using namespace std;

void solve(int i,int j, int n, string move, vector<string> &ans, vector<vector<int>>&a, vector<vector<int>>&vis, int di[], int dj[]){
    if(i==n-1 && j==n-1){
        ans.push_back(move);
        return;
    }
    
    string direction = "DLRU";
    for(int ind=0;ind<4;ind++){
        int nexti = i+di[ind];
        int nextj = j+dj[ind];
        if(nexti >=0 && nextj >= 0 && nexti<n && nextj<n && !vis[nexti][nextj] && a[nexti][nextj] == 1){
            vis[i][j]=1;
            solve(nexti,nextj,n,move+direction[ind],ans,a,vis,di,dj);
            vis[i][j]=0;
        }
    }
}
vector<string> findpath(vector<vector<int>> &a, int n){
    vector<string> ans;
    vector<vector<int>> vis(n, vector<int> (n,0));
    int di[] = {+1, 0 ,0 , -1};
    int dj[] = {0, -1, 1, 0};
    if(a[0][0] == 1) solve(0,0,n,"",ans,a,vis,di,dj);
    return ans;
}

int main(){
    int n;
    cin>>n;
    vector<vector<int>> a(n, vector<int>(n));
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>a[i][j];
        }
    }
    vector<string>result = findpath(a,n);
   if (result.size() == 0)
    cout << -1;
  else
    for (int i = 0; i < result.size(); i++) cout << result[i] << " ";
  cout << endl;

  return 0;
}